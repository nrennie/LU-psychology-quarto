---
title: "Introduction to Quarto for Research"
subtitle: "<small>9 May 2024</small>"
author: "Dr Nicola Rennie"
format:
  LUstyle-revealjs:
    self-contained: true
    footer: "{{< fa envelope >}} [n.rennie@lancaster.ac.uk](mailto:n.rennie@lancaster.ac.uk) {{< fa globe >}} [nrennie.rbind.io](https://nrennie.rbind.io/) {{< fa brands linkedin >}} [nicola-rennie](https://www.linkedin.com/in/nicola-rennie/)<br>[nrennie.rbind.io/LU-psychology-quarto](https://nrennie.rbind.io/LU-psychology-quarto/)"
execute: 
  eval: true
  echo: fenced
---

# Welcome!

## About me

::: columns
::: {.column .right}

Lecturer in Health Data Science in the [Centre for Health Informatics, Computing, and Statistics](https://chicas.lancaster-university.uk/).

<br>

Academic background in statistics and operational research. Industry experience in statistics and data science consultancy.

<br>

Organiser of R-Ladies Lancaster, and part of R-Ladies Global team.

:::

::: {.column}

![](images/CHICASlogo.png){fig-align="center" fig-alt="CHICASlogo" width=80%}

:::
:::


## What to expect during this workshop

The workshop will run for *2 hours* this morning and *2 hours* this afternoon.

* Combines slides, live coding examples, quiz questions, and exercises for you to participate in.

* Ask questions throughout!

## Workshop resources

* GitHub: [github.com/nrennie/LU-psychology-quarto](https://github.com/nrennie/LU-psychology-quarto)

* Slides: [nrennie.rbind.io/LU-psychology-quarto](https://nrennie.rbind.io/LU-psychology-quarto)

# Introduction to Quarto {background-color="#D9DBDB"}

## What do you currently use?

**How do you write your journal articles?**

* Microsoft Word?

* LaTeX?

* R Markdown?

::: {.fragment}

**How do you currently perform analysis?**

* Excel?

* SPSS?

* R?

* Python?

:::


## What is Quarto?

Quarto is an open-source scientific and technical publishing system [that allows you to combine text, images, code, plots, and tables in a fully-reproducible document.]{.fragment}

<br>

[Quarto has support for multiple languages including R, Python, Julia, and Observable.]{.fragment}

<br>

[It also works for a range of output formats such as PDFs, HTML documents, websites, presentations,...]{.fragment}

## Why use Quarto? Why use R?

* Transparency

* More journal want code.

* Keeping the code with the paper...

* Copying and pasting is tedious (and a great source of accidental errors)

## Why is Quarto good for reproducible research?


## What about R Markdown?

R Markdown isn't going anywhere but...

* Quarto has better multi-language support

* More user-friendly

* Better control of the output layouts

# Your first Quarto document {background-color="#D9DBDB"}

## Creating a document

<p style="text-align:center;">
<img src="images/new_doc.gif" alt="Gif of creating a new quarto document" width="50%">
</p>

## Quarto in RStudio

* yaml prompts
* render button
* visual editor

## Predictive YAML (and code block options)

<p style="text-align:center;">
<img src="images/yaml.gif" alt="Gif of predictive yaml in a quarto document" width="50%">
</p>


## Rendering a document

Within RStudio IDE: click **Render** (or Ctrl+Shift+K)

. . . 

<br>

Using {quarto}

```{r}
#| eval: false
#| echo: true
library(quarto)
quarto_render("document.qmd")
```

. . .

<br>

Using the command line

``` bash
quarto render document.qmd
```

## What makes a Quarto document?

YAML header

``` yaml
---
title: "A very cool title"
format: html
---
```

. . . 

Content

* Text, links, images

* Code, tables, plots

* Equations, references


## Output types

::: {.incremental}

* Documents: HTML, PDF, MS Word, Markdown

* Presentations: Revealjs, PowerPoint, Beamer

* Websites

* Books

* ...

:::

## Live demo!

<br><br>

::: {.fragment}

See `examples/Example 1` for full code.

:::

## Exercise 1

Open `exercises/Exercise 1/README.md` for prompts.

* Create a new Quarto HTML document.
* Fill in the YAML options with a title and author.
* Render your document.
* Change the format to `docx`.
* Re-render your document.
* What about PDF?

```{r}
#| label: ex-1-timer
#| echo: false
countdown::countdown(
  minutes = 10,
  color_border = "#b20e10",
  color_text = "#b20e10",
  color_running_text = "white",
  color_running_background = "#b20e10",
  color_finished_text = "#b20e10",
  color_finished_background = "white",
  top = 0,
  margin = "1.2em",
  font_size = "2em"
)
```

::: {.fragment} 

See `exercise_solutions/Exercise 1` for full solutions.

:::

# Document content {background-color="#D9DBDB"}

## Markdown syntax

## Sections

* Lists
* 

## Including image files

* include
* image options align, cap

## Tables

## Links

## Live demo!

<br><br>

::: {.fragment}

See `examples/Example 2` for full code.

:::

## Exercise 2

Open `exercises/Exercise 2/README.md` for prompts.

* Create level 1 and level 2 section headings in your document.
* Add some text into your document. If you don't want to write your own, there is some sample text in `sample-text.qmd`.
* Format the text to include a list, and bold or italic text.
* Add a link to the International Personality Item Pool: [https://ipip.ori.org/](https://ipip.ori.org/).
* Include an image in your document. Find your own or use `eggs.jpg`.
* Add a caption to the image and center align it.
* Render your document - check the image appears and the link works.

```{r}
#| label: ex-2-timer
#| echo: false
countdown::countdown(
  minutes = 10,
  color_border = "#b20e10",
  color_text = "#b20e10",
  color_running_text = "white",
  color_running_background = "#b20e10",
  color_finished_text = "#b20e10",
  color_finished_background = "white",
  top = 0,
  margin = "1.2em",
  font_size = "2em"
)
```

::: {.fragment} 

See `exercise_solutions/Exercise 2` for full solutions.

:::

# Code blocks {background-color="#D9DBDB"}

## Code blocks

* Code blocks are the main way of including executable R code in a document. 

* Code blocks always start with three backticks, followed by the an ` r` in curly brackets.

```{r}
2 + 2
```

::: {.callout-tip}

Add a new code block using the **Ctrl + Shift + I** keyboard shortcut.

:::

## Code 

- paths are relative
- run code blocks one at a time
- think about environments

## Code block options

Code block options can control:

::: {.incremental}

* whether your code is executed
* whether your code is displayed
* if warnings and errors are displayed
* how figures are presented
* how tables are presented

:::

## Code block options

```{r}
#| echo: fenced
#| eval: false
#| warning: false
2 + 2
```

. . . 

<br>

Comparing to R Markdown: 

````
```{{r, warning=FALSE, eval=FALSE}}
2 + 2
```

````

. . . 

<br>

```{r}
#| echo: true
#| eval: false
knitr::convert_chunk_header("document.qmd", output = identity)
```

## Code block options

Code visibility options:

* Hide the code
```yaml
#| echo: false
```
* Show the code
```yaml
#| echo: true
```
* Show the code and the YAML
```yaml
#| echo: fenced
```

## Code block options

````

```{{r}}
#| echo: fenced
#| eval: true
#| warning: false
#| error: false
#| output: asis
#| include: true
```

````

## Global code block options

::: {.fragment}

::: columns
::: {.column}

**R Markdown**

````
```{{r}}
knitr::opts_chunk$set(echo = FALSE)
```
````

:::
::: {.column .fragment}

**Quarto**

``` yaml
---
title: "A very cool title"
format: docx
execute:
  echo: false
---
```

:::
:::

:::

## Code block options: label

* help to find where errors exist (unnumbered code block 39, Ctrl + F)
* no duplicate labels
* labels useful for other things (we'll see this afternoon)

```{r}
#| label: load-data
library(psych)
data(bfi)
```

```{r}
#| label: load-data-csv
bfi <- read.csv("https://vincentarelbundock.github.io/Rdatasets/csv/psych/bfi.csv")
```


::: {.callout-tip}

Separate label words using a `-` rather than a `_`.

:::

## Code block options: figures

Figure options:

```{r}
#| label: age-hist
#| fig-align: center
#| fig-width: 6
#| fig-asp: 0.9
#| fig-cap: "A histogram of participant age"
#| output-location: slide
hist(bfi$age, xlab = "Age", main = "")
```

## Code block options: tables

There are lots of options for creating tables in R:

* {knitr} - basic
* {kableExtra} - adds to `kable()` in {knitr}
* {gt} - more complex "great tables"
* {gtsummary} - creates summary tables using {gt}
* {flextable} - good for Word documents
* {tinytable} - very lightweight

## Code block options: tables

Prepare the data:

```{r}
data("sat.act")
sat_summary <- aggregate(
  cbind(SATV, SATQ) ~ education,
  FUN = mean,
  data = sat.act
)
```

## Code block options: tables

Make a table:

```{r}
#| tbl-cap: "Mean scores by education level"
#| output-location: slide
library(tinytable)
tt(sat_summary)
```


## Live demo!

<br><br>

::: {.fragment}

See `examples/Example 3` for full code.

:::

## Exercise 3

Open `exercises/Exercise 3/README.md` for prompts.

* Add a code block that loads the {psych} package and a dataset from the package e.g. `bfi`. 
  * Alternatively, use some other data that you have/like.
* Add another code block that makes a plot e.g. a bar chart of participants' education categories, `education`. You can use either base R or {ggplot2} (or another package!).
* Change the code block options and see what happens!
* Add a third code block that creates a table showing the first 10 rows and first 5 columns of your data. Hint: `head(bfi[, 1:5], 10)`. Use any table package you prefer.

```{r}
#| label: ex-3-timer
#| echo: false
countdown::countdown(
  minutes = 10,
  color_border = "#b20e10",
  color_text = "#b20e10",
  color_running_text = "white",
  color_running_background = "#b20e10",
  color_finished_text = "#b20e10",
  color_finished_background = "white",
  top = 0,
  margin = "1.2em",
  font_size = "2em"
)
```

::: {.fragment} 

See `exercise_solutions/Exercise 3` for full solutions.

:::

# Break! <br> Back at 13:30 {background-color="#D9DBDB"}

# Referencing in Quarto {background-color="#D9DBDB"}

## Referencing results in text

We can also include code inline, rather than as a separate chunk.

::: {.callout-note appearance="minimal"}
The total number of participants is `` `r "\u0060r nrow(bfi)\u0060"` ``.
:::

The total number of participants is `r nrow(bfi)`.

## Referencing results in text

For more complex numbers, you can calculate or extract results from a code block.

```{r}
#| echo: fenced
# Calculate median age of females
# Males = 1, Females = 2
age_f <- median(bfi[bfi$gender == 2, "age"])
```

::: {.fragment}

::: {.callout-note appearance="minimal"}
The median age of females in the study is `` `r "\u0060r age_f\u0060"` ``.
:::

The median age of females in the study is `r age_f`.

:::

## Figure references

external images

## Figure references

Earlier we made a histogram of age:

```{r}
#| label: age-histogram
#| fig-align: center
#| fig-width: 6
#| fig-asp: 0.4
#| fig-cap: "A histogram of participant age"
hist(bfi$age, xlab = "Age", main = "")
```

## Figure references

To make this a **Figure** reference, we need to prefix the label with `fig-`:

```{r}
#| label: fig-age-histogram
#| fig-align: center
#| fig-width: 6
#| fig-asp: 0.4
#| fig-cap: "A histogram of participant age"
hist(bfi$age, xlab = "Age", main = "")
```

Then:

A histogram of participant ages is shown in @fig-age-histogram.

## Table references

## Cross-referencing

references within a document

## Citations

## Option 1: using .bib files

::: {.callout-tip}

Find a citation for the R packages you using by running `citation("pkgname")` e.g. `citation("psych")`

:::

## Create a .bib file

```bib
@Manual{psych,
  title = {psych: Procedures for Psychological, Psychometric, and Personality Research},
  author = {{William Revelle}},
  organization = {Northwestern University},
  address = {Evanston, Illinois},
  year = {2024},
  note = {R package version 2.4.1},
  url = {https://CRAN.R-project.org/package=psych},
}
```

## Option 2: Zotero

## Other citation options

## Live demo!

<br><br>

::: {.fragment}

See `examples/Example 4` for full code.

:::

## Exercise 4

Open `exercises/Exercise 4/README.md` for prompts.

* Update (or add!) a label to the figure code block you created earlier.
* Add a reference to this in the text.
* Add section references, and cross reference to this section somewhere else in the document.
* Add a citation by either:
  * creating a .bib file and listing it in the YAML.
  * using the Zotero integration

```{r}
#| label: ex-4-timer
#| echo: false
countdown::countdown(
  minutes = 10,
  color_border = "#b20e10",
  color_text = "#b20e10",
  color_running_text = "white",
  color_running_background = "#b20e10",
  color_finished_text = "#b20e10",
  color_finished_background = "white",
  top = 0,
  margin = "1.2em",
  font_size = "2em"
)
```

::: {.fragment} 

See `exercise_solutions/Exercise 4` for full solutions.

:::

# Formatting Quarto documents {background-color="#D9DBDB"}

## Writing LaTeX

````
---
title: "A very cool title"
format: html
---

\begin{equation}
\hat{e}_i = Y_i - \hat{Y}_i
\end{equation}

````
. . .

\begin{equation}
\hat{e}_i = Y_i - \hat{Y}_i
\end{equation}

## extensions

## journal templates

[https://quarto.org/docs/extensions/listing-journals.html](https://quarto.org/docs/extensions/listing-journals.html)

## apa

quarto::quarto_use_template("wjschne/apaquarto")

https://github.com/wjschne/apaquarto

https://wjschne.github.io/apaquarto/

## output formats

keep-tex, word

## Manuscript format

## Live demo!

<br><br>

::: {.fragment}

See `examples/Example 5` for full code.

:::

## Exercise 5

Open `exercises/Exercise 5/README.md` for prompts.

* Install the APA Quarto extension.
* Change the output format of your document to APA (docx, html, or pdf). 
* Re-render your document. Do you get an error?
* Look at the installation instructions at [wjschne.github.io/apaquarto/installation.html](https://wjschne.github.io/apaquarto/installation.html) to see what other YAML options are added.
* Add the required information about the author (you).
* Re-render your document.

```{r}
#| label: ex-5-timer
#| echo: false
countdown::countdown(
  minutes = 10,
  color_border = "#b20e10",
  color_text = "#b20e10",
  color_running_text = "white",
  color_running_background = "#b20e10",
  color_finished_text = "#b20e10",
  color_finished_background = "white",
  top = 0,
  margin = "1.2em",
  font_size = "2em"
)
```

::: {.fragment} 

See `exercise_solutions/Exercise 5` for full solutions.

:::

# Collaborating {background-color="#D9DBDB"}

## Collaborating on Quarto documents

We often work with other people when we write papers. 

How do we do that effectively using Quarto?

## GitHub

## {trackdown}

## VSCode ive Share

## Existing GH issue

# Discussion {background-color="#D9DBDB"}

## Examples of paper written in Quarto

## Nice features few of fav things

## Tricky things

## Quarto and R versions

* renv
* nix

## {targets}

## Converting from R Markdown

## Quarto extensions (e.g. journal article templates)

Templates: [github.com/quarto-journals](https://github.com/quarto-journals)

. . . 

``` yaml
---
title: "A very cool title"
format:
  pdf: default
  jss-pdf:
    keep-tex: true 
---
```

## Writing LaTeX

````
---
title: "A very cool title"
format: html
---

\begin{equation}
\hat{e}_i = Y_i - \hat{Y}_i
\end{equation}

````
. . .

\begin{equation}
\hat{e}_i = Y_i - \hat{Y}_i
\end{equation}


## Multiple columns

````

::: .columns
::: {.column width = "60%"}
The content for the first column goes here.
:::

::: {.column width = "40%"}
The content for the second column goes here.
:::
:::


````


## Code animation {auto-animate="true"}

```r
g <- ggplot(data = lemurs, 
            aes(x = name, y = n, fill = name)) +
  geom_col()
```

## Code animation {auto-animate=true}

```r
g <- ggplot(data = lemurs, 
            aes(x = name, y = n, fill = name)) +
  geom_col() +
  scale_fill_brewer(palette = "Dark2")
```

## Diagrams

````
```{dot}
graph G {
  qmd -- Knitr;
  qmd -- Jupyter;
  Knitr -- md;
  Jupyter -- md;
  md -- pandoc;
  pandoc -- HTML;
  pandoc -- PDF;
  pandoc -- Word;
  pandoc -- more;
}
```
````
## Diagrams

```{dot}
//| fig-align: center
//| fig-height: 5
graph G {
  bgcolor="#ffffff"
  qmd -- Knitr;
  qmd -- Jupyter;
  Knitr -- md;
  Jupyter -- md;
  md -- pandoc;
  pandoc -- HTML;
  pandoc -- PDF;
  pandoc -- Word;
  pandoc -- more;
}
```

## Parameterised documents

``` yaml
---
title: "A very cool title"
format: html
params:
  year: 2023
---
```
. . . 

Subset data based on parameters:

```{r}
#| eval: false
#| echo: true
data_subset <- data |>
  dplyr::filter(
    year == params$year
  )
```

## Parameterised documents

```{r}
#| eval: false
#| echo: true
quarto::quarto_render(
  input = "document.qmd",
  execute_params = list("year" = 2022)
)
```

. . . 

Map over multiple years with {purrr}:

```{r}
#| eval: false
#| echo: true
purrr::walk(2018:2022, ~ quarto::quarto_render(
  input = "document.qmd",
  execute_params = list("year" = .x),
  output_file = glue::glue("report_{.x}.html")
))
```


## Useful links

<br>

* Documentation: [quarto.org](https://quarto.org/) 

* GitHub Discussions: [github.com/quarto-dev/quarto-cli/discussions](https://github.com/quarto-dev/quarto-cli/discussions) 

* Intro Webinar: [jthomasmock.github.io/quarto-2hr-webinar](https://jthomasmock.github.io/quarto-2hr-webinar/) 

* Awesome Quarto List: [github.com/mcanouil/awesome-quarto](https://github.com/mcanouil/awesome-quarto)

## Workshop resources

<br>

* GitHub: [github.com/nrennie/LU-psychology-quarto](https://github.com/nrennie/LU-psychology-quarto)

* Slides: [nrennie.github.io/LU-psychology-quarto](https://nrennie.github.io/LU-psychology-quarto)

## Feedback

<br>

Feedback form: [forms.gle/qgsv36RxPZP1Ty7H8](https://forms.gle/qgsv36RxPZP1Ty7H8)

## 

::: columns
::: {.column}

<br>

{{< fa brands linkedin >}} [nicola-rennie](https://www.linkedin.com/in/nicola-rennie/)

{{< fa brands mastodon >}} [\@fosstodon.org/\@nrennie](https://fosstodon.org/deck/@nrennie)

{{< fa brands github >}} [nrennie](https://github.com/nrennie)

{{< fa globe >}} [nrennie.rbind.io](https://nrennie.rbind.io/)

{{< fa envelope >}} [n.rennie@lancaster.ac.uk](mailto:n.rennie@lancaster.ac.uk)

{{< fa briefcase >}} [chicas.lancaster-university.uk](https://chicas.lancaster-university.uk/)

:::
::: {.column}

![](images/qr-code.png){fig-align="center" fig-alt="QR code" width=70%}

:::
:::
